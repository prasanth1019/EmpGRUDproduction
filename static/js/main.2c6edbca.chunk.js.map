{"version":3,"sources":["serviceWorker.js","views/employeeDashboard.js","employee.js","App.js","actions/index.js","store/index.js","reducers/index.js","views/createEmployee.js","views/readEmployees.js","views/updateEmployees.js","views/deleteEmployee.js","root.js","index.js"],"names":["Boolean","window","location","hostname","match","wellStyles","maxWidth","margin","btnStyle","background","color","EmpDashboard","react_default","a","createElement","className","style","Link","to","Button","bsSize","block","navBg","Employee","_ref","initialData","Navbar","Header","Brand","App","this","props","city","employee","Component","connect","state","City","readEmployee","employeeData","type","payload","createEmployee","response","updateEmployee","updateEmployeeResponseById","receivePostResponse","json","posts","receivedAt","Date","now","getPostMethods","Url","dispatch","fetch","then","error","console","log","receivePosts","store","applyMiddleware","thunk","createStore","cs","action","Object","objectSpread","userData","Id","Name","INITIAL_STATE","Email","formState","allowAlert","formParam","width","border","borderRadius","CreateEmp","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleNameChange","e","setState","target","value","handleCityChange","handleEmailChange","entrolForm","method","body","JSON","stringify","results","history","push","cancelForm","name","getValidationState","rE","RegExp","test","_this2","Form","FormGroup","controlId","validationState","placeholder","onChange","autoFocus","email","onClick","event","disabled","Alert","bsStyle","ReadEmp","Table","striped","bordered","condensed","hover","UserData","map","item","index","key","formHide","textAlign","showHideForm","display","hideShowForm","aliCtr","UpdateEmployees","handleIdChange","getRecords","length","getUpdateRecords","rec","temp","Number","showUpdateForm","handleUpdateIdChange","deleteContainer","DeleteEmployee","getDelete","record","onRadioChanged","Root","es","BrowserRouter","Route","path","component","render","ReactDOM","root","document","getElementById","subscribe","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2c6edbca.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\r\nimport { Button} from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst cusPad = {\r\n  padding: '10px 0px'\r\n}\r\n\r\nconst wellStyles = {\r\n  maxWidth: 400,\r\n  margin: '10px auto 10px'\r\n};\r\n\r\nconst btnStyle = {\r\n  background: 'black',\r\n  color: 'blue'\r\n}\r\n\r\nconst EmpDashboard = () => {\r\n  return(\r\n  /* <Grid>\r\n    <Row className=\"show-grid\">\r\n      <Col xs={12} md={12} style={cusPad} >\r\n        <span> Create </span>\r\n      </Col>\r\n      <Col xs={12} md={12} style={cusPad} >\r\n        <span> Update </span>\r\n      </Col>\r\n      <Col xs={12} md={12}  style={cusPad} >\r\n        <span> Read </span>\r\n      </Col>\r\n      <Col xs={12} md={12}  style={cusPad} >\r\n        <span> Delete </span>\r\n      </Col>\r\n    </Row>\r\n  </Grid> */\r\n\r\n  <div className=\"well\" style={wellStyles}>\r\n    <Link to=\"/createEmp\">\r\n      <Button bsSize=\"large\" block style={btnStyle}>\r\n        Create\r\n      </Button>\r\n    </Link>\r\n    <Link to=\"/readEmp\">\r\n      <Button bsSize=\"large\" block style={btnStyle}>\r\n        Read\r\n      </Button>\r\n    </Link>\r\n    <Link to=\"/updateEmp\">\r\n      <Button bsSize=\"large\" block style={btnStyle} >\r\n        Update\r\n      </Button>\r\n    </Link>\r\n    <Link to=\"/deleteEmp\">\r\n      <Button bsSize=\"large\" block style={btnStyle} >\r\n        Delete\r\n      </Button>\r\n    </Link>\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default EmpDashboard\r\n","import React from \"react\";\r\nimport {Navbar} from 'react-bootstrap';\r\n// import EmpDashboard from './views/employeeDashboard';\r\nimport { Link } from \"react-router-dom\"\r\n// import { store } from \"./store\";\r\n\r\nconst ParentCont = {\r\n  width: '50%',\r\n  margin: '0 auto',\r\n  border: '1px solid red',\r\n  background: '#333',\r\n  color: '#fff'\r\n}\r\nconst navBg = {\r\n    background: 'black'\r\n}\r\n\r\nconst Employee = ({initialData}) => {\r\n  return (\r\n    <div className=\"Emp\">\r\n    <Navbar style={navBg}>\r\n      <Navbar.Header>\r\n        <Navbar.Brand>\r\n          <Link to=\"/home\"> Employee Database Connection </Link>\r\n        </Navbar.Brand>\r\n    </Navbar.Header>\r\n        { <Link to=\"/employeeOperation\"> CRUD </Link> }\r\n    </Navbar>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Employee\r\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Employee from './employee.js';\nimport './App.css';\n\nclass App extends Component {\n\n  render() {\n    const { city } = this.props;\n    return (\n      <div className=\"App\">\n        {/*<span>{this.props.City}</span>*/}\n        <Employee></Employee>\n      </div>\n    );\n  }\n\n}\n\nconst mapStateToProps = function(state){\n  return {\n    City: state.City,\n  }\n}\n\nexport default connect(mapStateToProps)(App)\n","import fetch from 'cross-fetch';\r\n\r\nexport const createEmployeeData = (payload) => {\r\n  return {\r\n    \"type\": \"CREATE_EMPLOYEE\",\r\n    \"payload\": payload\r\n  }\r\n}\r\n\r\nexport const readEmployee = (employeeData) => {\r\n    return {\r\n      \"type\": \"READ_EMPLOYEE\",\r\n      \"payload\": employeeData\r\n    }\r\n  }\r\n\r\nexport const createEmployee = (response) => {\r\n    return {\r\n      \"type\": \"CREATE_EMPLOYEE\",\r\n      \"payload\": response\r\n    }\r\n  }\r\n\r\nexport const updateEmployee = (response) => {\r\n    return {\r\n      \"type\": \"UPDATE_EMPLOYEE\",\r\n      \"payload\": response\r\n    }\r\n  }\r\n\r\n  export const updateEmployeeResponseById = (response) => {\r\n      return {\r\n        \"type\": \"UPDATE_EMPLOYEE_RESPONSE_BY_ID\",\r\n        \"payload\": response\r\n      }\r\n    }\r\n\r\n  // export const deleteEmployee = (response) => {\r\n  //     return {\r\n  //       \"type\": \"DELETE_EMPLOYEE\",\r\n  //       \"payload\": response\r\n  //     }\r\n  //   }\r\n\r\nfunction receivePosts(json) {\r\n  return {\r\n    type: \"RECEIVE_POSTS\",\r\n    posts: json,\r\n    receivedAt: Date.now()\r\n  }\r\n}\r\n\r\nfunction receivePostResponse(json) {\r\n  return {\r\n    type: \"RECEIVE_POSTS\",\r\n    posts: json,\r\n    receivedAt: Date.now()\r\n  }\r\n}\r\n\r\nexport function getPostMethods(Url) {\r\n  return function(dispatch) {\r\n  return fetch(\"http://10.6.14.178:8080/\"+Url)\r\n     .then(\r\n       response => response.json(),\r\n       error => console.log('An error occurred.', error))\r\n     .then(json =>\r\n       dispatch(receivePosts(json))\r\n     )\r\n   }\r\n }\r\n\r\n export function getCreateEmployee(Url, userData) {\r\n   return function(dispatch) {\r\n     return fetch(\"http://10.6.14.178:8080/\"+ Url, { method:'POST', body: JSON.stringify(userData)})\r\n     .then(response => response[\"status\"],\r\n           error => console.log(\"Error with create employee\", error))\r\n     .then(response => dispatch(receivePostResponse(response)))\r\n   }\r\n }\r\n\r\nexport function getUpdateEmployee(Url, Id) {\r\n    return function(dispatch) {\r\n      return fetch(\"http://10.6.14.178:8080/\"+ Url, { method:'POST', body: JSON.stringify(Id)})\r\n      .then(response => response.json(),\r\n            error => console.log(\"Error with create employee\", error))\r\n      .then(response => dispatch(receivePostResponse(response)))\r\n    }\r\n}\r\n\r\nexport function getUpdateRec(Url, rec) {\r\n    return function(dispatch) {\r\n      return fetch(\"http://10.6.14.178:8080/\"+ Url, { method:'POST', body: JSON.stringify(rec)})\r\n      .then(response => response[\"status\"],\r\n            error => console.log(\"Error with Update employee\", error))\r\n      .then(response => dispatch(receivePostResponse(response)))\r\n    }\r\n}\r\n\r\nexport function getDeleteRecord(Url, record){\r\n  return function(dispatch){\r\n    return fetch(\"http://10.6.14.178:8080/\"+ Url, { method:'POST', body: JSON.stringify(record)})\r\n      .then(response => response[\"status\"],\r\n      error => console.log(\"Error with delete employee\", error))\r\n      .then(response => dispatch(receivePostResponse(response)))\r\n  }\r\n}\r\n","import { createStore,  applyMiddleware } from \"redux\";\r\nimport thunk from 'redux-thunk';\r\nimport reducer from \"../reducers\";\r\n\r\nconst initialState = {\"userData\": [{\"Id\":null, \"Name\":\"\", \"City\": \"\"}]}\r\nconst cs = applyMiddleware(thunk)(createStore);\r\nexport const store = cs(reducer, initialState);\r\n","export default (state, action) => {\r\n  switch (action.type) {\r\n    case \"CREATE_EMPLOYEE\":\r\n      return {\r\n        ...state\r\n            }\r\n       break;\r\n    case \"READ_EMPLOYEE\":\r\n      return {\r\n        ...state,\r\n        userData : action.payload\r\n            }\r\n       break;\r\n    case \"UPDATE_EMPLOYEE\":\r\n      return {\r\n        ...state,\r\n        userData : action.payload\r\n            }\r\n       break;\r\n    case \"UPDATE_EMPLOYEE_RESPONSE_BY_ID\":\r\n      return {\r\n        ...state,\r\n        userData : action.payload\r\n            }\r\n       break;\r\n    case \"DELETE_EMPLOYEE\":\r\n      return {\r\n        ...state,\r\n        userData : action.payload\r\n            }\r\n       break;\r\n     default:\r\n  }\r\n  return state;\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from 'react-redux'\r\nimport { Form, FormGroup, Button, Alert } from 'react-bootstrap';\r\nimport { getCreateEmployee, createEmployee } from '../actions';\r\nimport { store } from '../store';\r\n\r\nconst INITIAL_STATE = {\r\n  'Name': '',\r\n  'City': '',\r\n  'Email':'',\r\n  'formState': true,\r\n  'allowAlert': false\r\n}\r\n\r\nconst formParam = {\r\n  width: \"35%\",\r\n  margin: \"0 auto\",\r\n  border: \"5px solid dodgerblue\"\r\n}\r\n\r\nconst btnStyle = {\r\n  border: \"1px solid #ddd\",\r\n  borderRadius: \"0px\"\r\n}\r\n\r\nconst borderSty = {\r\n  border: \"1px solid #FF0000\",\r\n}\r\n\r\nclass CreateEmp extends Component {\r\n\r\n  constructor(props){\r\n    super(props)\r\n    this.state = INITIAL_STATE;\r\n  }\r\n\r\n  handleNameChange = (e) => {\r\n      this.setState({ Name: e.target.value });\r\n    }\r\n\r\n  handleCityChange = (e) => {\r\n      this.setState({ City: e.target.value });\r\n    }\r\n\r\n  handleEmailChange = (e) => {\r\n      this.setState({ Email: e.target.value });\r\n    }\r\n\r\n  entrolForm = (e) => {\r\n      store.dispatch(getCreateEmployee('createEmp', this.state))\r\n      .then((results) =>{\r\n          store.dispatch(createEmployee(results))\r\n          this.props.history.push('/readEmp')\r\n      } )\r\n    }\r\n\r\n  cancelForm = (e) => {\r\n      // this.setState({ 'Name': '', 'City': '', 'Email':'', 'formState': true });\r\n      this.state.name = \"\"\r\n    }\r\n\r\n  getValidationState = () => {\r\n      const rE = new RegExp(/^[a-zA-Z0-9#*_!]+\\@[a-z]+\\.[a-z]{2,3}$/);\r\n      this.state.formState = (rE.test(this.state.Email)) ? false : true;\r\n    }\r\n\r\n      render() {\r\n          return (\r\n            <Form style={formParam}>\r\n              <FormGroup controlId=\"formBasicText\" validationState={this.getValidationState()}>\r\n                  <br/>\r\n                  <input type = \"text\"\r\n                  name = \"Name\"\r\n                  className = \"form-control\"\r\n                  placeholder = \"Enter name\"\r\n                  value = { this.state.name }\r\n                  onChange = { this.handleNameChange }\r\n                  autoFocus / >\r\n                  <br/>\r\n                  <input type = \"text\"\r\n                  name = \"City\"\r\n                  className = \"form-control\"\r\n                  placeholder = \"Enter City\"\r\n                  value = { this.state.city }\r\n                  onChange = { this.handleCityChange }\r\n                  autoFocus / >\r\n                  <br/>\r\n                  <input type = \"text\"\r\n                  name = \"Email\"\r\n                  value = { this.state.email }\r\n                  className = \"form-control\"\r\n                  placeholder = \"Enter Email\"\r\n                  onChange = { this.handleEmailChange }\r\n                  autoFocus / >\r\n                  <br/>\r\n                    {'\\u00A0'}{'\\u00A0'}{'\\u00A0'}\r\n                    <Button style={btnStyle} onClick={(event) => this.entrolForm()} disabled = { this.state.formState } > Entrol </Button>\r\n                    {'\\u00A0'}{'\\u00A0'}{'\\u00A0'}{'\\u00A0'}{'\\u00A0'}\r\n                    <Button style={btnStyle} onClick={this.cancelForm} >Cancel</Button>\r\n              </FormGroup>\r\n              {this.state.allowAlert ? <Alert bsStyle=\"success\" > <span>Hi! Record Inserted Successfully!</span> </Alert> : null }\r\n            </Form>\r\n\r\n          )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = function(state){\r\n  return {\r\n    City: state.City,\r\n    Name: state.Name\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(CreateEmp)\r\n","import React, { Component } from \"react\";\r\nimport { connect } from 'react-redux'\r\n\r\nimport { Table } from 'react-bootstrap';\r\nimport { getPostMethods, readEmployee } from '../actions';\r\nimport { store } from '../store';\r\n\r\nconst INITIAL_STATE = { 'userData': [{ Id: \"\", Name: \"\", City: \"\" }] }\r\n\r\nclass ReadEmp extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = INITIAL_STATE;\r\n    store.dispatch(getPostMethods('readEmp'))\r\n    .then((results) =>\r\n      store.dispatch(readEmployee(results[\"posts\"]))\r\n     )\r\n  }\r\n\r\n  componenetDidMount() {\r\n    console.log('Getting employees from DB...');\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Table striped bordered condensed hover>\r\n        <thead>\r\n          <tr><th>ID</th><th>City</th><th>Name</th><th>Email</th></tr>\r\n        </thead>\r\n            <tbody>\r\n            {this.props.UserData.map( (item, index) => {\r\n                return<tr key={item.Id}><td>{item.Id}</td><td>{item.City}</td><td>{item.Name}</td><td>{item.Email}</td></tr>\r\n            })}\r\n            </tbody>\r\n      </Table>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    UserData: state.userData\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ReadEmp)\r\n","import React, { Component } from \"react\";\r\nimport { connect } from 'react-redux'\r\nimport { Form, FormGroup, Button, Table } from 'react-bootstrap';\r\nimport { getUpdateEmployee, updateEmployee, updateEmployeeResponseById, getUpdateRec } from '../actions';\r\nimport { store } from '../store';\r\n\r\n\r\nconst INITIAL_STATE = {\r\n  \"Id\": 0,\r\n  'Name': '',\r\n  'City': '',\r\n  'Email':'',\r\n  'formState': false,\r\n  'allowAlert': false,\r\n  'formHide': false\r\n}\r\n\r\nconst formParam = {\r\n  width: \"35%\",\r\n  margin: \"0 auto\",\r\n  border: \"5px solid dodgerblue\",\r\n  textAlign:\"center\"\r\n}\r\n\r\nconst showHideForm = {\r\n  display: \"none\"\r\n}\r\n\r\nconst hideShowForm = {\r\n  display: \"block\"\r\n}\r\n\r\nconst btnStyle = {\r\n  border: \"1px solid #ccc7c7\",\r\n  margin: \"0 auto\"\r\n}\r\n\r\nconst aliCtr = {\r\n  textAlign: \"center\"\r\n}\r\n\r\nclass UpdateEmployees extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = INITIAL_STATE;\r\n  }\r\n\r\n  handleIdChange = (e) => {\r\n    this.setState({Id: e.target.value})\r\n    console.log(this.state);\r\n    // this.state.formState = (this.state.Id.length >= 3) ? false : true\r\n  }\r\n\r\n  getRecords = function() {\r\n      if (this.state.Id.length >= 3) {\r\n        store.dispatch(getUpdateEmployee('updateEmp', this.state))\r\n        .then((results) => {\r\n            store.dispatch(updateEmployee(results[\"posts\"]))\r\n        })\r\n      }\r\n  }\r\n\r\n  getUpdateRecords = (e) => {\r\n    var temp = {\"Id\": Number(this.state.Id), \"Name\": this.state.Name, \"City\": this.state.City, \"Email\": this.state.Email }\r\n    console.log(temp)\r\n    store.dispatch(getUpdateRec('updateRec', temp))\r\n    .then((results) => {\r\n      this.props.history.push('/readEmp')\r\n    })\r\n  }\r\n\r\n  showUpdateForm = function(item) {\r\n      this.setState({\"formHide\": true})\r\n      this.setState({\"Name\": item[0][\"Name\"]})\r\n      this.setState({\"City\": item[0][\"City\"]})\r\n      this.setState({\"Email\": item[0][\"Email\"]})\r\n      store.dispatch(updateEmployeeResponseById(item))\r\n      console.log(this.state.Name)\r\n  }\r\n\r\n  handleNameChange = (e) => {\r\n      this.setState({ Name: e.target.value })\r\n    }\r\n\r\n  handleCityChange = (e) => {\r\n      this.setState({ City: e.target.value })\r\n    }\r\n\r\n  handleEmailChange = (e) => {\r\n      this.setState({ Email: e.target.value })\r\n    }\r\n\r\n  handleUpdateIdChange = (e) => {\r\n      this.setState({Id: e.target.value})\r\n    }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n      <Form style={formParam} >\r\n        <span style={aliCtr}><h3>Update Record</h3></span><br/>\r\n        <FormGroup controlId=\"formUpdateText\" >\r\n          <input\r\n          type=\"text\"\r\n          name=\"ID\"\r\n          className=\"form-control\"\r\n          placeholder=\"Enter ID to update record\"\r\n          value={this.state.Id}\r\n          onChange={this.handleIdChange}\r\n          autoFocus />\r\n          <br/>\r\n          <Button style={btnStyle} onClick={(event) => this.getRecords()} disabled = {this.state.formState} >Get the Rec</Button>\r\n          </FormGroup>\r\n        </Form>\r\n        <Table striped bordered condensed hover style={formParam} >\r\n          <thead>\r\n            <tr><th>ID</th><th>City</th><th>Name</th><th>Email</th></tr>\r\n          </thead>\r\n              <tbody>\r\n              {this.props.userData.map((item, index) => {\r\n                  return <tr onClick={(event) => this.showUpdateForm([item])} key={item.Id}><td>{item.Id}</td><td>{item.City}</td><td>{item.Name}</td><td>{item.Email}</td></tr>\r\n              })}\r\n              </tbody>\r\n        </Table>\r\n        <Form style={(this.state.formHide) ? hideShowForm : showHideForm }>\r\n          <FormGroup controlId=\"updateForm\" style={formParam}>\r\n            <input\r\n            type=\"text\"\r\n            name=\"ID\"\r\n            className=\"form-control\"\r\n            placeholder=\"Enter ID to update record\"\r\n            value={this.state.Id}\r\n            onChange={this.handleUpdateIdChange}\r\n            autoFocus />\r\n            <br/>\r\n            <input\r\n            type=\"text\"\r\n            name=\"Name\"\r\n            className=\"form-control\"\r\n            placeholder=\"Enter Name to update record\"\r\n            value={this.state.Name}\r\n            onChange={this.handleNameChange}\r\n            autoFocus />\r\n            <br/>\r\n            <input\r\n            type=\"text\"\r\n            name=\"City\"\r\n            className=\"form-control\"\r\n            placeholder=\"Enter City to update record\"\r\n            value={this.state.City}\r\n            onChange={this.handleCityChange}\r\n            autoFocus />\r\n            <br/>\r\n            <input\r\n            type=\"text\"\r\n            name=\"Email\"\r\n            className=\"form-control\"\r\n            placeholder=\"Enter Email to update record\"\r\n            value={this.state.Email}\r\n            onChange={this.handleEmailChange}\r\n            autoFocus />\r\n            <br/>\r\n            <Button style={btnStyle} onClick={(event) => this.getUpdateRecords()} >Update</Button>\r\n          </FormGroup>\r\n        </Form>\r\n        </div>\r\n          )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userData: state.userData\r\n  }\r\n}\r\n\r\nexport default connect (mapStateToProps)(UpdateEmployees)\r\n","import React, { Component } from \"react\";\r\nimport { connect } from 'react-redux'\r\nimport { Form, Radio, Button, Table, Glyphicon } from 'react-bootstrap';\r\nimport { getPostMethods, readEmployee, getDeleteRecord } from '../actions';\r\nimport { store } from '../store';\r\n\r\nconst INITIAL_STATE = {\r\n  \"Id\": 0,\r\n  \"formState\": true\r\n}\r\n\r\nconst deleteContainer = {\r\n  \"width\": \"70%\",\r\n  \"margin\": \"10px auto\"\r\n}\r\n\r\nclass DeleteEmployee extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = INITIAL_STATE\r\n    store.dispatch(getPostMethods('readEmp'))\r\n    .then((results) =>\r\n    store.dispatch(readEmployee(results[\"posts\"])))\r\n  }\r\n\r\n  getDelete = (e) => {\r\n      console.log(this.state);\r\n      store.dispatch(getDeleteRecord('deleteEmp', this.state))\r\n    .then((results) =>\r\n      this.props.history.push('/readEmp'))\r\n  }\r\n\r\n  onRadioChanged = (e) => {\r\n    if (e.target.value.length == 3) {\r\n      this.setState({\"formState\": false});\r\n      this.setState({\"Id\": e.target.value});\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <div style={deleteContainer}>\r\n        <Button onClick={this.getDelete} disabled={this.state.formState} >Delete</Button>\r\n        <br/>\r\n        <br/>\r\n        <Table striped bordered condensed hover>\r\n          <thead>\r\n            <tr><th>RB</th><th>ID</th><th>City</th><th>Name</th><th>Email</th></tr>\r\n          </thead>\r\n              <tbody>\r\n              {this.props.UserData.map( (item, index) => {\r\n                  return<tr key={item.Id}><td><input type=\"radio\" name=\"site_name\" value={item.Id || \"\"} onChange={this.onRadioChanged}/></td><td>{item.Id}</td><td>{item.City}</td><td>{item.Name}</td><td>{item.Email}</td></tr>\r\n              })}\r\n              </tbody>\r\n        </Table>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      UserData: state.userData\r\n    }\r\n}\r\n\r\nexport default connect (mapStateToProps)(DeleteEmployee)\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\r\nimport EmpDashboard from './views/employeeDashboard'\r\nimport App from './App'\r\nimport CreateEmp from './views/createEmployee'\r\nimport ReadEmp from './views/readEmployees'\r\nimport UpdateEmployees from './views/updateEmployees'\r\nimport DeleteEmployee from './views/deleteEmployee'\r\nimport { store } from './store';\r\n\r\nconst Root = () => (\r\n  <Provider store={store} >\r\n    <Router>\r\n      <div>\r\n        <Route path=\"/:filter?\" component={App} />\r\n        <Route path=\"/employeeOperation\" component={EmpDashboard} />\r\n        <Route path=\"/createEmp\" component={CreateEmp} />\r\n        <Route path=\"/readEmp\" component={ReadEmp} />\r\n        <Route path=\"/updateEmp\" component={UpdateEmployees} />\r\n        <Route path=\"/deleteEmp\" component={DeleteEmployee} />\r\n      </div> \r\n    </Router>\r\n  </Provider>\r\n)\r\n\r\n\r\nexport default Root\r\n","import 'react-bootstrap/dist/react-bootstrap.min.js';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n// import empDashboard from './views/employeeDashboard';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport Root from './root'\r\nimport { store } from './store';\r\n\r\nconst render = () => {\r\n  ReactDOM.render( <Root/>, document.getElementById('root'));\r\n}\r\n\r\nrender();\r\nstore.subscribe(render);\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}